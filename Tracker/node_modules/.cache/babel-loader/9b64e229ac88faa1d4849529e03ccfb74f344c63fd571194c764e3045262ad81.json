{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\16043\\\\Brushfire\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Layout from './components/layout';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from './webpages/home';\nimport Tracker from './webpages/tracker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nconst Webpages = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/tracker\",\n          element: Tracker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_c = Webpages;\nexport default Webpages;\nvar _c;\n$RefreshReg$(_c, \"Webpages\");","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","Layout","BrowserRouter","Router","Routes","Route","Home","Tracker","jsxDEV","_jsxDEV","render","children","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById","Webpages","path","element","_c","$RefreshReg$"],"sources":["C:/Users/16043/Brushfire/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Layout from './components/layout';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport Home from './webpages/home';\nimport Tracker from './webpages/tracker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nconst Webpages = () => {\n    return(\n        <Router>\n          <Layout>\n          <Routes>\n            <Route path = \"/\" element = {Home} />\n            <Route path = \"/tracker\" element = {Tracker} />\n          </Routes>\n          </Layout>\n        </Router>\n    );\n};\nexport default Webpages;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,QACA,kBAAkB;AACzB,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzCX,QAAQ,CAACY,MAAM,eACbD,OAAA,CAACP,aAAa;EAAAS,QAAA,eACZF,OAAA,CAACV,GAAG;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACM,CAAC,EAChBC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;;AAGD;AACA;AACA;AACAjB,eAAe,CAAC,CAAC;AAEjB,MAAMkB,QAAQ,GAAGA,CAAA,KAAM;EACnB,oBACIT,OAAA,CAACN,MAAM;IAAAQ,QAAA,eACLF,OAAA,CAACR,MAAM;MAAAU,QAAA,eACPF,OAAA,CAACL,MAAM;QAAAO,QAAA,gBACLF,OAAA,CAACJ,KAAK;UAACc,IAAI,EAAG,GAAG;UAACC,OAAO,EAAId;QAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrCN,OAAA,CAACJ,KAAK;UAACc,IAAI,EAAG,UAAU;UAACC,OAAO,EAAIb;QAAQ;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEjB,CAAC;AAACM,EAAA,GAXIH,QAAQ;AAYd,eAAeA,QAAQ;AAAC,IAAAG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}