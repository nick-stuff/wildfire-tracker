{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\16043\\\\Brushfire\\\\src\\\\webpages\\\\tracker.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tracker = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [markers, setMarkers] = useState([]);\n  const [triggerMessageUpdate, setTriggerMessageUpdate] = useState();\n  const [chart, setChart] = useState({\n    current: \"\",\n    historical: \"\",\n    message: \"\"\n  });\n  useEffect(() => {\n    fetch('/comparechart/data').then(res => res.json()).then(data => {\n      setChart({\n        current: data.numcurrent,\n        historical: data.numhistorical,\n        message: data.message\n      });\n      //console.log(chart.current,chart.historical,chart.message )\n    });\n    setTriggerMessageUpdate(false);\n  }, [markers, triggerMessageUpdate]);\n  const [figure, setFigure] = useState(0);\n  useEffect(() => {\n    fetch('/comparechart/figure').then(res => res.blob()).then(blob => {\n      setFigure(URL.createObjectURL(blob));\n    });\n  }, []);\n\n  //const [fireMarkers, setFireMarkers] = useState([])\n\n  const [oldFireMarkers, setOldFireMarkers] = useState([]);\n  const AddMarkerToClick = () => {\n    _s();\n    const map = useMapEvents({\n      dblclick(event) {\n        const {\n          lat,\n          lng\n        } = event.latlng;\n        fetch('/testpost', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            latitude: lat,\n            longitude: lng\n          })\n        }).then(response => response.json()).then(data => fetch(`https://nominatim.openstreetmap.org/reverse?lat=${lat.toString()}&lon=${lng.toString()}&format=json`).then(response => response.json()).then(locdata => setMarkers(prevMarkers => [...prevMarkers, {\n          geocode: [lat, lng],\n          popup: locdata.display_name,\n          firedata: getFirePoints(data)\n        }])));\n      }\n    });\n    return null;\n  };\n  _s(AddMarkerToClick, \"D2AvXN8Rt/r3DPix6IJfcPGmgF0=\", true);\n  const deleteMarker = index => {\n    setMarkers(prevMarkers => prevMarkers.filter((_, i) => i !== index));\n  };\n  const onMarkerClick = index => {\n    //console.log('hi')\n    const lat = markers[index].geocode[0];\n    const lng = markers[index].geocode[1];\n    fetch('/selectmarker', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        latitude: lat,\n        longitude: lng\n      })\n    });\n    setTriggerMessageUpdate(true);\n    return null;\n  };\n  function getFirePoints(firedata) {\n    const fires = JSON.parse(firedata);\n    const fireCoords = [];\n    fires.forEach(fire => {\n      const {\n        LATITUDE,\n        LONGITUDE,\n        Name,\n        IGNITION_DATE\n      } = fire;\n      fireCoords.push({\n        geocode: [LATITUDE, LONGITUDE],\n        popup: `${Name}, ${IGNITION_DATE}`\n      });\n    });\n    return fireCoords;\n  }\n  function getOldFirePoints(oldfiredata) {\n    const oldfires = JSON.parse(oldfiredata);\n    const oldfireCoords = [];\n    oldfires.forEach(oldfire => {\n      const {\n        LATITUDE,\n        LONGITUDE,\n        Name,\n        IGNITION_DATE\n      } = oldfire;\n      oldfireCoords.push({\n        geocode: [LATITUDE, LONGITUDE],\n        popup: `${Name}, ${IGNITION_DATE}`\n      });\n    });\n    return oldfireCoords;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tracker Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), figure && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: figure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: chart.current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: chart.historical\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: chart.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n_s2(Tracker, \"XdMobODWJNi18XjRWmJWbDjaPA4=\");\n_c = Tracker;\nexport default Tracker;\nvar _c;\n$RefreshReg$(_c, \"Tracker\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Tracker","_s2","_s","$RefreshSig$","markers","setMarkers","triggerMessageUpdate","setTriggerMessageUpdate","chart","setChart","current","historical","message","fetch","then","res","json","data","numcurrent","numhistorical","figure","setFigure","blob","URL","createObjectURL","oldFireMarkers","setOldFireMarkers","AddMarkerToClick","map","useMapEvents","dblclick","event","lat","lng","latlng","method","headers","body","JSON","stringify","latitude","longitude","response","toString","locdata","prevMarkers","geocode","popup","display_name","firedata","getFirePoints","deleteMarker","index","filter","_","i","onMarkerClick","fires","parse","fireCoords","forEach","fire","LATITUDE","LONGITUDE","Name","IGNITION_DATE","push","getOldFirePoints","oldfiredata","oldfires","oldfireCoords","oldfire","children","fileName","_jsxFileName","lineNumber","columnNumber","src","_c","$RefreshReg$"],"sources":["C:/Users/16043/Brushfire/src/webpages/tracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nconst Tracker = () => {\r\n\r\n\r\n const [markers, setMarkers] = useState([]);\r\n  const [triggerMessageUpdate, setTriggerMessageUpdate] = useState();\r\n\r\n  const [chart, setChart] = useState({\r\n    current: \"\",\r\n    historical: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch('/comparechart/data')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setChart({\r\n          current: data.numcurrent,\r\n          historical: data.numhistorical,\r\n          message: data.message,\r\n        });\r\n        //console.log(chart.current,chart.historical,chart.message )\r\n      })\r\n    setTriggerMessageUpdate(false);\r\n  }, [markers, triggerMessageUpdate]);\r\n\r\n  const [figure, setFigure] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetch('/comparechart/figure')\r\n      .then(res => res.blob())\r\n      .then(blob => {\r\n        setFigure(URL.createObjectURL(blob));\r\n      })\r\n  }, []);\r\n\r\n   //const [fireMarkers, setFireMarkers] = useState([])\r\n\r\n  const [oldFireMarkers, setOldFireMarkers] = useState([])\r\n\r\n\r\n  const AddMarkerToClick = () => {\r\n    const map = useMapEvents({\r\n      dblclick(event) {\r\n        const { lat, lng } = event.latlng;\r\n        fetch('/testpost', {\r\n         method: 'POST',\r\n         headers: {\r\n          'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            latitude: lat,\r\n            longitude: lng,\r\n\r\n          })\r\n\r\n      })\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        fetch(`https://nominatim.openstreetmap.org/reverse?lat=${lat.toString()}&lon=${lng.toString()}&format=json`)\r\n        .then(response => response.json())\r\n        .then(locdata => setMarkers(prevMarkers => [...prevMarkers, { geocode: [lat, lng], popup: locdata.display_name, firedata: getFirePoints(data)}])));\r\n\r\n      }\r\n\r\n    });\r\n\r\n    return null;\r\n  };\r\n  const deleteMarker = (index) => {\r\n    setMarkers(prevMarkers => prevMarkers.filter((_,i) => i !== index));\r\n  };\r\n\r\n  const onMarkerClick = (index) => {\r\n    //console.log('hi')\r\n    const lat  = markers[index].geocode[0]\r\n    const lng =markers[index].geocode[1]\r\n\r\n    fetch('/selectmarker', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          latitude: lat,\r\n          longitude: lng,\r\n        })\r\n\r\n      })\r\n    setTriggerMessageUpdate(true);\r\n      return null;\r\n\r\n  }\r\n\r\n\r\n\r\n  function getFirePoints(firedata) {\r\n\r\n    const fires = JSON.parse(firedata)\r\n    const fireCoords =[];\r\n\r\n    fires.forEach(fire => {\r\n          const { LATITUDE, LONGITUDE, Name, IGNITION_DATE } = fire;\r\n          fireCoords.push({geocode: [LATITUDE, LONGITUDE], popup: `${Name}, ${IGNITION_DATE}`})\r\n        });\r\n\r\n    return fireCoords;\r\n\r\n  }\r\n\r\n  function getOldFirePoints(oldfiredata) {\r\n\r\n    const oldfires = JSON.parse(oldfiredata)\r\n    const oldfireCoords =[];\r\n\r\n    oldfires.forEach(oldfire => {\r\n          const { LATITUDE, LONGITUDE, Name, IGNITION_DATE } = oldfire;\r\n          oldfireCoords.push({geocode: [LATITUDE, LONGITUDE], popup: `${Name}, ${IGNITION_DATE}`})\r\n        });\r\n\r\n    return oldfireCoords;\r\n\r\n  }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Tracker Page</h1>\r\n            <p>Tracker</p>\r\n      \r\n          {figure && <img src={figure}/>}\r\n          <p>{chart.current}</p>\r\n          <p>{chart.historical}</p>\r\n          <p>{chart.message}</p>\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default Tracker;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAGrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACU,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAElE,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC;IACjCc,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,OAAO,EAAE;EACX,CAAC,CAAC;EAEFf,SAAS,CAAC,MAAM;IACdgB,KAAK,CAAC,oBAAoB,CAAC,CACxBC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACZR,QAAQ,CAAC;QACPC,OAAO,EAAEO,IAAI,CAACC,UAAU;QACxBP,UAAU,EAAEM,IAAI,CAACE,aAAa;QAC9BP,OAAO,EAAEK,IAAI,CAACL;MAChB,CAAC,CAAC;MACF;IACF,CAAC,CAAC;IACJL,uBAAuB,CAAC,KAAK,CAAC;EAChC,CAAC,EAAE,CAACH,OAAO,EAAEE,oBAAoB,CAAC,CAAC;EAEnC,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EAEvCC,SAAS,CAAC,MAAM;IACdgB,KAAK,CAAC,sBAAsB,CAAC,CAC1BC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACO,IAAI,CAAC,CAAC,CAAC,CACvBR,IAAI,CAACQ,IAAI,IAAI;MACZD,SAAS,CAACE,GAAG,CAACC,eAAe,CAACF,IAAI,CAAC,CAAC;IACtC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEL;;EAED,MAAM,CAACG,cAAc,EAAEC,iBAAiB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAGxD,MAAM+B,gBAAgB,GAAGA,CAAA,KAAM;IAAAzB,EAAA;IAC7B,MAAM0B,GAAG,GAAGC,YAAY,CAAC;MACvBC,QAAQA,CAACC,KAAK,EAAE;QACd,MAAM;UAAEC,GAAG;UAAEC;QAAI,CAAC,GAAGF,KAAK,CAACG,MAAM;QACjCrB,KAAK,CAAC,WAAW,EAAE;UAClBsB,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACR,cAAc,EAAE;UAChB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,QAAQ,EAAER,GAAG;YACbS,SAAS,EAAER;UAEb,CAAC;QAEL,CAAC,CAAC,CACDnB,IAAI,CAAC4B,QAAQ,IAAIA,QAAQ,CAAC1B,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IACRJ,KAAK,CAAE,mDAAkDmB,GAAG,CAACW,QAAQ,CAAC,CAAE,QAAOV,GAAG,CAACU,QAAQ,CAAC,CAAE,cAAa,CAAC,CAC3G7B,IAAI,CAAC4B,QAAQ,IAAIA,QAAQ,CAAC1B,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAC8B,OAAO,IAAIvC,UAAU,CAACwC,WAAW,IAAI,CAAC,GAAGA,WAAW,EAAE;UAAEC,OAAO,EAAE,CAACd,GAAG,EAAEC,GAAG,CAAC;UAAEc,KAAK,EAAEH,OAAO,CAACI,YAAY;UAAEC,QAAQ,EAAEC,aAAa,CAACjC,IAAI;QAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAEpJ;IAEF,CAAC,CAAC;IAEF,OAAO,IAAI;EACb,CAAC;EAACf,EAAA,CA3BIyB,gBAAgB;EA4BtB,MAAMwB,YAAY,GAAIC,KAAK,IAAK;IAC9B/C,UAAU,CAACwC,WAAW,IAAIA,WAAW,CAACQ,MAAM,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKA,CAAC,KAAKH,KAAK,CAAC,CAAC;EACrE,CAAC;EAED,MAAMI,aAAa,GAAIJ,KAAK,IAAK;IAC/B;IACA,MAAMpB,GAAG,GAAI5B,OAAO,CAACgD,KAAK,CAAC,CAACN,OAAO,CAAC,CAAC,CAAC;IACtC,MAAMb,GAAG,GAAE7B,OAAO,CAACgD,KAAK,CAAC,CAACN,OAAO,CAAC,CAAC,CAAC;IAEpCjC,KAAK,CAAC,eAAe,EAAE;MACnBsB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,QAAQ,EAAER,GAAG;QACbS,SAAS,EAAER;MACb,CAAC;IAEH,CAAC,CAAC;IACJ1B,uBAAuB,CAAC,IAAI,CAAC;IAC3B,OAAO,IAAI;EAEf,CAAC;EAID,SAAS2C,aAAaA,CAACD,QAAQ,EAAE;IAE/B,MAAMQ,KAAK,GAAGnB,IAAI,CAACoB,KAAK,CAACT,QAAQ,CAAC;IAClC,MAAMU,UAAU,GAAE,EAAE;IAEpBF,KAAK,CAACG,OAAO,CAACC,IAAI,IAAI;MAChB,MAAM;QAAEC,QAAQ;QAAEC,SAAS;QAAEC,IAAI;QAAEC;MAAc,CAAC,GAAGJ,IAAI;MACzDF,UAAU,CAACO,IAAI,CAAC;QAACpB,OAAO,EAAE,CAACgB,QAAQ,EAAEC,SAAS,CAAC;QAAEhB,KAAK,EAAG,GAAEiB,IAAK,KAAIC,aAAc;MAAC,CAAC,CAAC;IACvF,CAAC,CAAC;IAEN,OAAON,UAAU;EAEnB;EAEA,SAASQ,gBAAgBA,CAACC,WAAW,EAAE;IAErC,MAAMC,QAAQ,GAAG/B,IAAI,CAACoB,KAAK,CAACU,WAAW,CAAC;IACxC,MAAME,aAAa,GAAE,EAAE;IAEvBD,QAAQ,CAACT,OAAO,CAACW,OAAO,IAAI;MACtB,MAAM;QAAET,QAAQ;QAAEC,SAAS;QAAEC,IAAI;QAAEC;MAAc,CAAC,GAAGM,OAAO;MAC5DD,aAAa,CAACJ,IAAI,CAAC;QAACpB,OAAO,EAAE,CAACgB,QAAQ,EAAEC,SAAS,CAAC;QAAEhB,KAAK,EAAG,GAAEiB,IAAK,KAAIC,aAAc;MAAC,CAAC,CAAC;IAC1F,CAAC,CAAC;IAEN,OAAOK,aAAa;EAEtB;EAIE,oBACIvE,OAAA;IAAAyE,QAAA,gBACIzE,OAAA;MAAAyE,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB7E,OAAA;MAAAyE,QAAA,EAAG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAEfxD,MAAM,iBAAIrB,OAAA;MAAK8E,GAAG,EAAEzD;IAAO;MAAAqD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC9B7E,OAAA;MAAAyE,QAAA,EAAIhE,KAAK,CAACE;IAAO;MAAA+D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB7E,OAAA;MAAAyE,QAAA,EAAIhE,KAAK,CAACG;IAAU;MAAA8D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzB7E,OAAA;MAAAyE,QAAA,EAAIhE,KAAK,CAACI;IAAO;MAAA6D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAGd,CAAC;AAAC3E,GAAA,CA1IID,OAAO;AAAA8E,EAAA,GAAP9E,OAAO;AA2Ib,eAAeA,OAAO;AAAC,IAAA8E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}